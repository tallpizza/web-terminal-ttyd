version: '3.8'

services:
  web-terminal:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web-terminal
    
    ports:
      # Backend API & Frontend
      - "${PORT:-3000}:3000"
      # GoTTY instances (20 ports)
      - "8081-8100:8081-8100"
    
    environment:
      # Node environment
      NODE_ENV: ${NODE_ENV:-production}
      
      # Server configuration
      PORT: ${PORT:-3000}
      HOST: 0.0.0.0
      
      # Database
      DATABASE_PATH: /app/data/sessions.db
      
      # GoTTY configuration
      GOTTY_BINARY_PATH: /usr/local/bin/gotty
      GOTTY_START_PORT: 8081
      MAX_SESSIONS: ${MAX_SESSIONS:-20}
      
      # Security
      SESSION_SECRET: ${SESSION_SECRET:-change-me-in-production}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
      
      # Cleanup service
      CLEANUP_INTERVAL: ${CLEANUP_INTERVAL:-3600000}
      STALE_SESSION_HOURS: ${STALE_SESSION_HOURS:-24}
      HISTORY_RETENTION_DAYS: ${HISTORY_RETENTION_DAYS:-7}
    
    volumes:
      # Persistent data storage
      - ./data:/app/data
      
      # Optional: Mount host's SSH keys for GoTTY sessions
      - ${SSH_KEY_PATH:-~/.ssh}:/home/nodejs/.ssh:ro
      
      # Optional: Mount custom scripts
      - ./scripts:/app/custom-scripts:ro
      
      # Optional: Mount custom themes or configurations
      - ./config:/app/config:ro
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    
    networks:
      - web-terminal-network
    
    # Resource limits (optional, adjust based on your needs)
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: web-terminal-nginx
    profiles:
      - production
    
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    
    depends_on:
      - web-terminal
    
    restart: unless-stopped
    
    networks:
      - web-terminal-network

networks:
  web-terminal-network:
    driver: bridge

volumes:
  data:
    driver: local